FROM icse:p1 as stage1

FROM icde:p3 as stage3

FROM icde:p2

RUN apt-get install -y --no-install-recommends xz-utils && apt-get install -y wget make && apt-get install -y libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev

RUN wget https://www.python.org/ftp/python/3.7.6/Python-3.7.6.tgz && tar -zxf Python-3.7.6.tgz && cd Python-3.7.6 && ./configure --with-ssl && make && make install && make install && cd ../ && rm -rf Python-3.7.6*

# RUN pip3 install dockerfile

RUN wget https://nodejs.org/download/release/v11.15.0/node-v11.15.0-linux-x64.tar.gz && tar -xf node-v11.15.0-linux-x64.tar.gz && mkdir /usr/local/lib/node && mv node-v11.15.0-linux-x64 /usr/local/lib/node/nodejs && echo 'export NODEJS_HOME=/usr/local/lib/node/nodejs' >> /etc/profile && echo 'export PATH=$NODEJS_HOME/bin:$PATH' >> /etc/profile && rm -rf node*

RUN ["/bin/bash", "-c", "source /etc/profile && npm install -g typescript yargs@latest-13 js-yaml @types/node"]

ENV NODE_OPTIONS=--max_old_space_size=4096
ENV NODE_PATH=/usr/local/lib/node_modules

COPY --from=stage1 /app /stage1

RUN mkdir stage2 && mv /build /stage2 && mv /filters /stage2 && mv /app.py /stage2

# COPY --from=stage2 /build /stage2
# COPY --from=stage2 /filters /stage2
# COPY --from=stage2 /app.py /stage2

COPY --from=stage3 /app /stage3
COPY --from=stage3 /build /stage3/build

COPY *.py /stage4

ENTRYPOINT [ "bash" ]

